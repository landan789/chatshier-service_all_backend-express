# This is a sample build configuration for JavaScript.
# Check our guides at https://confluence.atlassian.com/x/14UWN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: node:8.10.0


pipelines:  
  branches:
    default:
      - step:
          script:
            - rm -Rf ~/.ssh/knon_host
    develop:
      - step:
          script:
            - echo "start to npm install on all servers."
            - ssh -tt -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${SSH_USER}@${SCHEDULE_IP} -p 22 'cd ${SERVICE_DIR} && npm install'
            - ssh -tt -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${SSH_USER}@${SERVICE_1_IP} -p 22 'cd ${SERVICE_DIR} && npm install'
            - ssh -tt -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${SSH_USER}@${SERVICE_2_IP} -p 22 'cd ${SERVICE_DIR} && npm install'
            
            - echo "start to git pull on all servers."
            - ssh -tt -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${SSH_USER}@${SCHEDULE_IP} -p 22 'cd ${SERVICE_DIR} && git stash && git fetch && git pull'
            - ssh -tt -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${SSH_USER}@${SERVICE_1_IP} -p 22 'cd ${SERVICE_DIR} && npm install'
            - ssh -tt -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${SSH_USER}@${SERVICE_2_IP} -p 22 'cd ${SERVICE_DIR} && npm install'
            
            - echo "[SUCCEEDED] develop has been deployed."
    release:
      - step:
          script:
            - echo "start to npm install on all servers."
            - echo "[SUCCEEDED] release has been deployed."
    master:
      - step:
          script:
            - echo "start to npm install on all servers."
            - ssh -tt -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${SSH_USER}@${SCHEDULE_IP} -p 22 'cd ${SERVICE_DIR} && npm install'
            - ssh -tt -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${SSH_USER}@${SERVICE_1_IP} -p 22 'cd ${SERVICE_DIR} && npm install'
            - ssh -tt -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null ${SSH_USER}@${SERVICE_2_IP} -p 22 'cd ${SERVICE_DIR} && npm install'
            - echo "[SUCCEEDED] master has been deployed."

