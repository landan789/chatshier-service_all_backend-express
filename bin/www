#!/usr/bin/env node

const express = require('express');
const path = require('path');
const index = require('../routes/index');

var app = require('../app');
var http = require('http');
var server = http.createServer(app);
server.listen(process.env.PORT || '3002');

server.on('error', (error) => {
    if (error.syscall !== 'listen') {
        throw error;
    }
    var bind = 'string' === typeof port ? 'Pipe ' + port : 'Port ' + port;

    // handle specific listen errors with friendly messages
    switch (error.code) {
        case 'EACCES':
            console.error(bind + ' requires elevated privileges');
            process.exit(1);
        case 'EADDRINUSE':
            console.error(bind + ' is already in use');
            process.exit(1);
        default:
            throw error;
    }
});
server.on('listening', () => {
    var addr = server.address();
    var bind = 'string' === typeof addr ? 'pipe ' + addr : 'port ' + addr.port;
    console.log('[SUCCEEDED] service.chatshier is listening on ' + bind + ' !!');
});
var sockets = require('../sockets/index')(server);

app.use(express.static(path.join(__dirname, '..', 'public')));
app.use('/', index);

app.use(function(req, res, next) {
    var err = new Error('Not Found');
    err.status = 404;
    next(err);
});
app.use(function(err, req, res, next) {
    res.locals.message = err.message;

    console.log(err);
    res.status(500);
    res.send('error');
});